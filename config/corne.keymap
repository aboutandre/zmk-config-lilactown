/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
     behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |   |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  |   |
// |   |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |   |
// |   |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  |   |
//                    | ESC | LWR | SPC |   | ENT | RSE  | BSPC |
                        bindings = <
   &none &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L &kp U     &kp Y   &kp SEMI &none
   &none &kp A &kp R &kp S &kp T &kp G   &kp M &kp N &kp E     &kp I   &kp O    &none
   &none &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H &kp COMMA &kp DOT &kp FSLH &none
              &kp ESC &mo 1 &kp SPACE   &kp RET &mo 2 &sk RSFT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |    | ESC | TAB |     |     |     |   | LFT | DWN |  UP | RGT |  '  |      |
// |    |     |     |     |     |     |   |     |     |     |     |     |      |
//                  | ESC |     | SPC |   | ENT |     | BSPC |
                        bindings = <
   &none &kp N1  &kp N2  &kp N3 &kp N4 &kp N5    &kp N6   &kp N7   &kp N8 &kp N9    &kp N0  &kp BSPC
   &none &kp ESC &kp TAB &none  &none  &none     &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp SQT &trans
   &none &trans  &trans  &trans &trans &trans    &trans   &trans   &trans &trans    &trans  &trans
                        &trans &trans &kp SPACE   &sk RSFT  &mo 3 &kp BSPC
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |    |  `  |  ~  |  "  |  '  |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |    |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                  | ESC |     | SPC |   | ENT |     | BSPC |
                        bindings = <
   &kp  TAB  &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &kp GRAVE &kp TILDE &kp DQT  &kp SQT  &none       &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans    &trans    &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	            &trans &mo 3   &trans   &trans   &trans    &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |   | VUP | VDN | MUT | P/P |    |   |  BT1  | BT2 | BT3 | BT4 | BT CLR |   |
// |   | CTL | ALT | GUI | SFT |    |   |       |     |     |     |        |   |
// |   |     |     |     |     |    |   | RESET |     |     |     |        |   |
//                     |     |     |     |     |     |
                        bindings = <
   &none &kp C_VOL_UP &kp C_VOL_DN &kp K_MUTE &kp C_PP &none    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR   &none
   &none &sk LCTL     &sk LALT     &sk LGUI   &sk LSFT &none    &none        &sk RSFT     &sk RGUI     &sk RALT     &sk RCTL     &none
   &none &none        &none        &none      &none    &none    &reset       &none        &none        &none        &none        &none
                                 &trans    &trans   &trans       &trans    &trans      &trans
                        >;
                };
        };
};
