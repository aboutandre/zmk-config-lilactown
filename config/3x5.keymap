#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>

/ {
   #include "clojure.dtsi"

   combos {
      // default layer
      compatible = "zmk,combos";
       combo_default_top {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&paste>;
        layers = <0>;
      };
      combo_default_mid {
        timeout-ms = <50>;
        key-positions = <13 14>;
        bindings = <&copy>;
        layers = <0>;
      };
      combo_default_bot {
        timeout-ms = <50>;
        key-positions = <23 24>;
        bindings = <&cut>;
        layers = <0>;
      };

      // nav layer
      combo_nav_top {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&new_tab>;
        layers = <1>;
      };       
      combo_nav_mid {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&switch_win>;
        layers = <1>;
      };       
      combo_nav_bot {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&close_tab>;
        layers = <1>;
      };       


      // symbol layer
      combo_sym_top {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&clj_defn>;
        layers = <2>;
      };
      combo_sym_mid {
        timeout-ms = <50>;
        key-positions = <13 14>;
        bindings = <&clj_fn>;
        layers = <2>;
      };
      combo_sym_bot {
        timeout-ms = <50>;
        key-positions = <23 24>;
        bindings = <&clj_let>;
        layers = <2>;
      };
    };
    behaviors {
      mmv {
        delay-ms = <0>;
        acceleration-exponent=<1>;
        time-to-max-speed-ms = <500>;
      };
      mwh {
        delay-ms = <0>;
        acceleration-exponent=<1>;
        time-to-max-speed-ms = <0>;
      };
    };

    macros {
      copy: copy {
        label = "ZM_macro_copy";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LGUI>
           , <&macro_tap &kp C>
           , <&macro_release &kp LGUI>
           ;
      };
      cut: cut {
        label = "ZM_macro_cut";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LGUI>
           , <&macro_tap &kp X>
           , <&macro_release &kp LGUI>
           ;
      };
      paste: paste {
        label = "ZM_macro_paste";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LGUI>
           , <&macro_tap &kp V>
           , <&macro_release &kp LGUI>
           ;
      };

      // navigation
      close_tab: close_tab {
        label = "ZM_close_tab";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LGUI>
           , <&macro_tap &kp W>
           , <&macro_release &kp LGUI>
           ;
      };
      new_tab: new_tab {
        label = "ZM_new_tab";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LGUI>
           , <&macro_tap &kp T>
           , <&macro_release &kp LGUI>
           ;
      };
      switch_app: switch_app {
        label = "ZM_switch_app";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LGUI>
           , <&macro_tap &kp TAB>
           , <&macro_release &kp LGUI>
           ;
      };
      space_left: space_left {
        label = "ZM_space_left";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LCTL>
           , <&macro_tap &kp LEFT>
           , <&macro_release &kp LCTL>
           ;
      };
      space_right: space_right {
        label = "ZM_space_right";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LCTL>
           , <&macro_tap &kp RIGHT>
           , <&macro_release &kp LCTL>
           ;
      };
      switch_win: switch_win {
        label = "ZM_switch_win";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
          = <&macro_press &kp LGUI>
          , <&macro_tap &kp GRAVE>
          , <&macro_release &kp LGUI>
          ;
      };
      tab_left: tab_left {
        label = "ZM_tab_left";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LCTL>
           , <&macro_press &kp LSFT>
           , <&macro_tap &kp TAB>
           , <&macro_release &kp LSFT>
           , <&macro_release &kp LCTL>
           ;
      };
      tab_right: tab_right {
        label = "ZM_tab_right";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
           = <&macro_press &kp LCTL>
           , <&macro_tap &kp TAB>
           , <&macro_release &kp LCTL>
           ;
      };
       
    };

        keymap {
                compatible = "zmk,keymap";

                default {
// -----------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  ;  |
//                   | nav | spc |   | sft | sym |
                        bindings = <
   &kp Q &kp W &kp F &kp P &kp B     &kp J &kp L &kp U      &kp Y   &kp SQT
   &kp A &kp R &kp S &kp T &kp G     &kp M &kp N &kp E      &kp I   &kp O
   &kp Z &kp X &kp C &kp D &kp V     &kp K &kp H &kp COMMA  &kp DOT &kp SCLN
                   &sl 1 &kp SPC     &kp RSFT &sl 2
                   >;
                sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;

                };

                nav {
// ---------------------------------------------------------------------------
// |  tab | sapp | tabl | tabr | vlup |   | mlft | mdwn |  mup | mrgt | rclk |
// | ctrl |  alt |  cmd | shft | vldn |   | left | down |   up | rght | bspc |
// | spcl | spcr | back | swin | play |   |      | pdwn | pgup | swpl | entr |
//                      |      |      |   | lclk |  num |
                        bindings = <
   &kp TAB     &switch_app  &tab_left &tab_right  &kp C_VOL_UP     &mmv MOVE_HOR(-1200) &mmv MOVE_VERT(1200) &mmv MOVE_VERT(-1200) &mmv MOVE_HOR(1200) &mkp RCLK
   &sk LCTL    &sk LALT     &sk LGUI  &sk LSFT    &kp C_VOL_DN     &kp LEFT             &kp DOWN             &kp UP                &kp RIGHT           &kp BSPC
   &space_left &space_right &none     &none       &kp C_PP         &none                &mwh SCROLL_DOWN     &mwh SCROLL_UP        &none               &kp RET
                                                 &trans &trans     &mkp LCLK &sl 3
                      >;
                sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp PG_UP PG_DN>;
                };

                sym {
// -----------------------------------------------------------------
// | ESC |  [  |  {  |  (  |  ~  |   |  ^  |  )  |  }  |  ]  |  `  |
// |  -  |  *  |  =  |  _  |  $  |   |  #  | SFT | CMD | ALT | CTL |
// |  +  |  |  |  @  |  /  |  %  |   |     |  \  |  &  |  ?  |  !  |
//                   |     | ADJ |   |     |     |
                        bindings = <
   &kp ESC   &kp LBKT &kp LCUR  &kp LPAR  &kp TILDE     &kp CARET &kp RPAR &kp RCUR &kp RBKT  &kp GRAVE
   &kp MINUS &kp STAR &kp EQUAL &kp UNDER &kp DLLR      &kp HASH  &sk RSFT &sk RGUI &sk RALT  &sk RCTL
   &kp PLUS  &kp PIPE &kp AT    &kp FSLH  &kp PRCNT     &none     &kp BSLH &kp AMPS &kp QMARK &kp EXCL
                                       &sl 3 &trans     &trans &trans
                       >;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

                num {
// -------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |   6   |  7  |  8  |  9  |  0  |  
// | CTL | ALT | GUI | SFT |     |   |       | SFT | GUI | ALT | CTL |
// | bt0 | bt1 | bt2 | bt3 | bt4 |   | btclr |     |     |     |     |
//                   |     |     |   |       |     |
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5           &kp N6 &kp N7   &kp N8   &kp N9   &kp N0
   &sk LCTL     &sk LALT     &sk LGUI     &sk LSFT     &none            &none  &sk RSFT &sk RGUI &sk RALT &sk RCTL
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &none  &none    &none    &none    &bt BT_CLR
                                                      &trans &trans     &trans &trans
                      >;
                };
        };
};
