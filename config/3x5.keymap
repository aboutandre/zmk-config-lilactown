#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>

/ {
   #include "clojure.dtsi"

   combos {
      // default layer
      compatible = "zmk,combos";
       combo_default_top {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&kp LG(V)>; // paste
        layers = <0>;
      };
      combo_default_mid {
        timeout-ms = <50>;
        key-positions = <13 14>;
        bindings = <&kp LG(C)>; // copy
        layers = <0>;
      };
      combo_default_bot {
        timeout-ms = <50>;
        key-positions = <23 24>;
        bindings = <&kp LG(X)>; // cut
        layers = <0>;
      };

      // nav layer
      combo_nav_hpoint_top {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&kp LG(T)>; // new tab
        layers = <1>;
      };       
      combo_nav_hpoint_mid {
        timeout-ms = <50>;
        key-positions = <13 14>;
        bindings = <&kp LG(GRAVE)>; // switch win
        layers = <1>;
      };       
      combo_nav_hpoint_bot {
        timeout-ms = <50>;
        key-positions = <23 24>;
        bindings = <&kp LG(N)>; // new win
        layers = <1>;
      };
      combo_nav_vmid_top {
        timeout-ms = <50>;
        key-positions = <2 12>;
        bindings = <&kp LG(W)>; // close win
        layers = <1>;
      };


      // symbol layer
      combo_sym_top {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&clj_defn>;
        layers = <2>;
      };
      combo_sym_mid {
        timeout-ms = <50>;
        key-positions = <13 14>;
        bindings = <&clj_fn>;
        layers = <2>;
      };
      combo_sym_bot {
        timeout-ms = <50>;
        key-positions = <23 24>;
        bindings = <&clj_let>;
        layers = <2>;
      };

      // num layer
      combo_num_bot {
        timeout-ms = <50>;
        key-positions = <23 24>;
        bindings = <&bt BT_CLR>;
        layers = <3>;
      };
    };
    behaviors {
      mmv {
        delay-ms = <0>;
        acceleration-exponent=<1>;
        time-to-max-speed-ms = <500>;
      };
      mwh {
        delay-ms = <0>;
        acceleration-exponent=<1>;
        time-to-max-speed-ms = <0>;
      };
    };

    macros {
    };

        keymap {
                compatible = "zmk,keymap";

                default {
// -----------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  ;  |
//                   | nav | spc |   | sft | sym |
                        bindings = <
   OUTER &kp Q &kp W &kp F &kp P &kp B     &kp J &kp L &kp U      &kp Y   &kp SQT  OUTER
   OUTER &kp A &kp R &kp S &kp T &kp G     &kp M &kp N &kp E      &kp I   &kp O    OUTER
   OUTER &kp Z &kp X &kp C &kp D &kp V     &kp K &kp H &kp COMMA  &kp DOT &kp SCLN OUTER
                   &mo 1 &kp SPC     &kp RSFT &mo 2
                   >;
                sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;

                };

                nav {
// ---------------------------------------------------------------------------
// |  tab | sapp |     | tabl | tabr |   | mlft | mdwn |  mup | mrgt | rclk |
// | ctrl |  alt | cmd | shft |      |   | left | down |   up | rght | bspc |
// | spcl | spcr |     | vldn | vlup |   | cmdk | pdwn | pgup | swpl | entr |
//                     |      |      |   | lclk |  num |
                        bindings = <
   &kp TAB      &kp LG(TAB)   &none     &kp LS(LC(TAB)) &kp LC(TAB)       &mmv MOVE_HOR(-2000) &mmv MOVE_VERT(2000) &mmv MOVE_VERT(-2000) &mmv MOVE_HOR(2000) &mkp RCLK
   &sk LCTL     &sk LALT      &sk LGUI  &sk LSFT        &none            &kp LEFT             &kp DOWN             &kp UP                &kp RIGHT           &kp BSPC
   &kp LC(LEFT) &kp LC(RIGHT) &none     &kp C_VOL_DN    &kp C_VOL_UP     &kp RG(K)            &mwh SCROLL_DOWN     &mwh SCROLL_UP        &none               &kp RET
                                                       &trans &trans     &mkp LCLK &mo 3
                      >;
                sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp PG_UP PG_DN>;
                };

                sym {
// -----------------------------------------------------------------
// | ESC |  [  |  {  |  (  |  ~  |   |  ^  |  )  |  }  |  ]  |  `  |
// |  -  |  *  |  =  |  _  |  $  |   |  #  | SFT | CMD | ALT | CTL |
// |  +  |  |  |  @  |  /  |  %  |   |     |  \  |  &  |  ?  |  !  |
//                   |     | ADJ |   |     |     |
                        bindings = <
   &kp ESC   &kp LBKT &kp LCUR  &kp LPAR  &kp TILDE     &kp CARET &kp RPAR &kp RCUR &kp RBKT  &kp GRAVE
   &kp MINUS &kp STAR &kp EQUAL &kp UNDER &kp DLLR      &kp HASH  &sk RSFT &sk RGUI &sk RALT  &sk RCTL
   &kp PLUS  &kp PIPE &kp AT    &kp FSLH  &kp PRCNT     &none     &kp BSLH &kp AMPS &kp QMARK &kp EXCL
                                       &mo 3 &trans     &trans &trans
                       >;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

                num {
// -------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |   6   |  7  |  8  |  9  |  0  |  
// | CTL | ALT | GUI | SFT |     |   |       | SFT | GUI | ALT | CTL |
// | bt0 | bt1 | bt2 | bt3 | bt4 |   | btclr |     |     |     |     |
//                   |     |     |   |       |     |
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5           &kp N6 &kp N7   &kp N8   &kp N9   &kp N0
   &sk LCTL     &sk LALT     &sk LGUI     &sk LSFT     &none            &none  &sk RSFT &sk RGUI &sk RALT &sk RCTL
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &none  &none    &none    &none    &none
                                                      &trans &trans     &trans &trans
                      >;
                };
        };
};
